!obj:pylearn2.training_algorithms.sgd.SGD {
    batch_size: 100,
    learning_rate: .01,
    monitoring_dataset: {
        'valid' : !include 'res/experiments/train_bowman_dataset.yaml',
    },
    cost: !obj:pylearn2.costs.cost.SumOfCosts {
        costs: [
            !obj:pylearn2.costs.mlp.Default { },
            !obj:pylearn2.costs.mlp.WeightDecay {
                coeffs: {
                    projection: &wdc 5e-5, # NOTE: This can be set to 5e-4?
                        optional_left: *wdc,
                    optional_right: *wdc,
                    comparator: *wdc,
                    final_output: *wdc,
                }
            }
        ]
    },
    learning_rule: !obj:pylearn2.training_algorithms.learning_rule.AdaGrad {
        max_scaling: 1e5
    },
    termination_criterion: !obj:pylearn2.termination_criteria.And {
        criteria: [
            # !obj:pylearn2.termination_criteria.MonitorBased {
            #     # NOTE: _y_ in the middle comes from name of outer layer of
            #     # of the MLP.
            #     channel_name: 'valid_y_misclass',
            #     prop_decrease: 0.,
            #     N: 10
            # },
            !obj:pylearn2.termination_criteria.EpochCounter {
                max_epochs: 20,
            }
        ]
    }
}
